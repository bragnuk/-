import numpy as np
import matplotlib.pyplot as plt

# Область значень для x та y
x_min, x_max = 2, 4
y_min, y_max = -1, 1
step = 0.01

# Створюємо масиви значень x та y
x, y = np.meshgrid(np.arange(x_min, x_max, step), np.arange(y_min, y_max, step))

# Рівняння системи
eq1 = np.cos(x - 1) + y - 0.5
eq2 = x - np.cos(y) - 3

# Створюємо графік
fig, ax = plt.subplots(figsize=(10, 10))

# Додаємо графік першого рівняння
ax.contour(x, y, eq1, levels=[0], colors='red')

# Додаємо графік другого рівняння
ax.contour(x, y, eq2, levels=[0], colors='blue')

# Налаштування графіка
ax.set_xlim([x_min, x_max])
ax.set_ylim([y_min, y_max])
ax.set_xlabel('x')
ax.set_ylabel('y')
ax.set_title('Графік системи рівнянь')
plt.grid(True)

# Показуємо графік
plt.show()

# Метод простої ітерації
import math

x0 = 3.5  # Початкове наближення для x
y0 = 0.5  # Початкове наближення для y
epsilon = 0.001  # Точність

def f1(x):
    return 0.5 - math.cos(x - 1)

def f2(y):
    return math.cos(y) + 3

def simple_iteration(x, y, epsilon):
    xn = x
    yn = y
    n = 0
    while True:
        x_next = f2(yn)
        y_next = f1(xn)
        n += 1
        if abs(x_next - xn) < epsilon and abs(y_next - yn) < epsilon:
            break
        xn, yn = x_next, y_next
    return xn, yn, n

x_solution, y_solution, iterations = simple_iteration(x0, y0, epsilon)
print(f'Розв\'язок: x = {x_solution}, y = {y_solution}, кількість ітерацій: {iterations}')
